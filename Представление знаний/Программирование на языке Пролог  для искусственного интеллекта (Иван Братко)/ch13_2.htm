<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>

<head>
<title>Глава 13. Пункт 2</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<script src="script.js" type="text/javascript"></script>
</head>

<body bgColor="#fff5ee">

<p align="center"><a href="ch13_1.htm">Назад</a> | <a href="index.htm">Содержание</a>
| <a href="ch13_3.htm">Вперёд</a></p>
<script language="JavaScript">double_line();</script>


<h4>13. 2.&nbsp;&nbsp;&nbsp; Примеры И/ИЛИ-представления <a
name="tn134">задач</h4>
</a><a name="p13_2_1">

<hr>
</a>

<h4>13. 2. 1.&nbsp;&nbsp;&nbsp; <span id="t134">И / ИЛИ-представление
задачи поиска маршрута</span></h4>

<p>Для задачи отыскания кратчайшего маршрута (рис.
13.1) И / ИЛИ-граф вместе с функцией стоимости можно
определить следующим образом: 

<ul>
  <li>ИЛИ-вершины представляются в форме X-Z, что
    означает: найти кратчайший путь из&nbsp; X&nbsp; в&nbsp; Z.</li>
  <li>И-вершины имеют вид<br>
    <br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; X-Z&nbsp; через&nbsp; Y<br>
    <br>
    что означает: найти кратчайший путь из&nbsp; X&nbsp; в
    &nbsp; Z,&nbsp; проходящий через&nbsp; Y.<br>
  </li>
  <li>Вершина X-Z является целевой вершиной
    (примитивной задачей), если на карте существует
    непосредственная связь между&nbsp; X&nbsp; и&nbsp; Z.</li>
  <li>Стоимость каждой целевой вершины X-Z равна
    расстоянию, которое необходимо&nbsp; преодолеть по
    дороге, соединяющей X с Z.</li>
  <li>Стоимость всех остальных (нетерминальных)
    вершин равна 0.</li>
</ul>

<p>Стоимость решающего графа равна сумме
стоимостей всех его вершин (в нашем случае это
просто сумма стоимостей всех терминальных
вершин). В задаче рис. 13.1 стартовая вершина - это
&nbsp; <em>а-z</em>.&nbsp; На рис.</p>

<p align="center"><img src="pic/fig13_5.gif" width="471" height="588"
alt="fig13_5.gif (3846 bytes)"></p>

<p align="center"><small><strong>Рис. 13. 5.</strong>&nbsp; Решающее
дерево минимальной стоимости для задачи<br>
поиска маршрута рис. 13.1, сформулированной в
терминах И / ИЛИ-<br>
графа.</small></p>

<p>13.5 показан решающий граф, имеющий стоимость 9.
Это дерево соответствует пути <strong>[a, b, d, f, i, z]</strong>,
который можно построить, если пройти по всем
листьям решающего дерева слева направо<a name="tn90">.</p>
</a><a name="p13_2_2">

<hr>
</a>

<h4>13. 2. 2.&nbsp;&nbsp;&nbsp; <span id="t90">Задача о ханойской
башне</span></h4>

<p>Задача о ханойской башне (рис. 13.6) - это еще один
классический пример эффективного применения
метода разбиения задачи на подзадачи и
построения И / ИЛИ-графа. Для простоты мы
рассмотрим упрощенную версию этой задачи, когда
в ней участвует только три диска:</p>

<p>Имеется три колышка&nbsp; 1,&nbsp; 2&nbsp; и&nbsp; 3&nbsp; и три
диска&nbsp; <em>а</em>,&nbsp; <em>b</em>&nbsp; и&nbsp; <em>с</em>&nbsp; (<em>а</em>
&nbsp; -&nbsp; наименьший из них, а&nbsp; <em>с</em>&nbsp; - &nbsp;
наибольший). Первоначально все диски находятся
на колышке 1. Задача состоит в том, чтобы
переложить все диски на колышек 3. На каждом шагу
можно перекладывать только один диск, причем
никогда нельзя помещать больший диск на меньший.</p>

<p>Эту задачу можно рассматривать как задачу
достижения следующих трех целей:</p>

<p>&nbsp;&nbsp;&nbsp; (1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Диск&nbsp; <em>а</em>
&nbsp; -&nbsp; на колышек 3.<br>
&nbsp;&nbsp;&nbsp; (2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Диск&nbsp; <em>b</em>
&nbsp; -&nbsp; на колышек 3.<br>
&nbsp;&nbsp;&nbsp; (3)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Диск&nbsp; <em>с</em>
&nbsp; -&nbsp; на колышек 3.</p>

<p>Беда в том, что эти цели не независимы. Например,
можно сразу переложить диск&nbsp; <em>а</em>&nbsp; на
колышек 3, и первая цель будет достигнута. Но
тогда две другие цели станут недостижимыми (если
только мы не отменим первое наше действие). К
счастью, существует такой удобный порядок
достижения этих целей, из которого можно легко
вывести искомое решение.</p>

<p align="center"><img src="pic/fig13_6.gif" width="508" height="97"
alt="fig13_6.gif (1215 bytes)"></p>

<p align="center"><small><strong>Рис. 13. 6.</strong>&nbsp; Задача о
ханойской башне</small> </p>

<p>Порядок этот можно установить при помощи
следующего рассуждения: самая трудная цель - это
цель 3 (диск&nbsp; <em>с</em>&nbsp; -&nbsp; на колышек 3), потому
что на диск&nbsp; с&nbsp; наложено больше всего
ограничений. В подобных ситуациях часто
срабатывает хорошая идея: пытаться достичь
первой самую трудную цель. Этот принцип основан
на следующей логике: поскольку другие цели
достигнуть легче (на них меньше ограничений),
можно надеяться на то, что их достижение возможно
без отмены действий на достижение самой трудной
цели.</p>

<p>Применительно к нашей задаче это означает, что
необходимо придерживаться следующей стратегии:</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Первой достигнуть цель
&quot;диск&nbsp; <em>с</em>&nbsp; - на колышек 3&quot;,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; а затем - все остальные.</p>

<p>Но первая цель не может быть достигнута сразу,
так как в начальной ситуации диск&nbsp; <em>с</em> &nbsp;
двигать нельзя. Следовательно, сначала мы должны
подготовить этот ход, и наша стратегия принимает
такой вид</p>

<p>&nbsp;&nbsp;&nbsp; (1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Обеспечить
возможность перемещения диска&nbsp; <em>с</em>&nbsp; с 1 на
3.<br>
&nbsp;&nbsp;&nbsp; (2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Переложить
&nbsp; <em>с</em>&nbsp; с 1 на 3.<br>
&nbsp;&nbsp;&nbsp; (3)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Достигнуть
остальные цели&nbsp; (<em>а</em>&nbsp; на 3 и&nbsp; <em>b</em>&nbsp; на
3).</p>

<p>Переложить&nbsp; <em>c</em>&nbsp; с 1 на 3 возможно только
в том случае, если диск&nbsp; <em>а</em>&nbsp; и&nbsp; <em>b</em>
&nbsp; оба надеты на колышек 2. Таким образом наша
исходная задача перемещения&nbsp; <em>а</em>,&nbsp; <em>b</em>
&nbsp; и&nbsp; <em>с</em>&nbsp; с 1 на 3 сводится к следующим
трем подзадачам:</p>

<p>Для того, чтобы переложить&nbsp; <em>a</em>,&nbsp; <em>b</em>
&nbsp; и&nbsp; <em>с</em>&nbsp; с 1 на 3, необходимо</p>

<p>&nbsp;&nbsp;&nbsp; (1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; переложить
&nbsp; <em>а</em>&nbsp; и&nbsp; <em>b</em>&nbsp; с 1 на 2,&nbsp; <em>и</em><br>
&nbsp;&nbsp;&nbsp; (2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; переложить
&nbsp; <em>с</em>&nbsp; с 1 на 3,&nbsp; <em>и</em><br>
&nbsp;&nbsp;&nbsp; (1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; переложить
&nbsp; <em>а</em>&nbsp; и&nbsp; <em>b</em>&nbsp; с 2 на 3.</p>

<p>Задача 2 тривиальна (она решается за один шаг).
Остальные две подзадачи можно решать независимо
от задачи 2, так как диски&nbsp; <em>а</em>&nbsp; и&nbsp; <em>b</em>
&nbsp; можно двигать, не обращая внимание на
положение диска&nbsp; <em>с</em>.&nbsp; Для решения задач 1
и 3 можно применить тот же самый принцип
разбиения (на этот раз диск&nbsp; <em>b</em>&nbsp; будет
самым &quot;трудным&quot;). В соответствии с этим
принципом задача 1 сводится к трем тривиальным
подзадачам:</p>

<p>Для того, чтобы переложить&nbsp; <em>а</em>&nbsp; и&nbsp; <em>b</em>
&nbsp; с 1 на 2, необходимо:</p>

<p>&nbsp;&nbsp;&nbsp; (1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; переложить
&nbsp; <em>а</em>&nbsp; с 1 на 3, и<br>
&nbsp;&nbsp;&nbsp; (2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; переложить
&nbsp; <em>b</em>&nbsp; с 1 на 2, и<br>
&nbsp;&nbsp;&nbsp; (1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; переложить
&nbsp; <em>а</em>&nbsp; с 3 на 2<a name="tn128">.</p>
</a><a name="p13_2_3">

<hr>
</a>

<h4>13. 2. 3.&nbsp;&nbsp;&nbsp; <span id="t128">Формулировка игровых
задач в терминах И / ИЛИ-графов</span></h4>

<p>Такие игры, как шахматы или шашки, естественно
рассматривать как задачи, представленные И /
ИЛИ-графами. Игры такого рода называются играми
двух лиц с полной информацией. Будем считать, что
существует только два возможных исхода игры:
ВЫИГРЫШ и ПРОИГРЫШ. (Об играх с тремя возможными
исходами -ВЫИГРЫШ, ПРОИГРЫШ и НИЧЬЯ, можно также
говорить, что они имеют только два исхода:
ВЫИГРЫШ и НЕВЫИГРЫШ). Так как участники игры
ходят по очереди, мы имеем два вида позиций, в
зависимости от того, чей ход. Давайте условимся
называть участников игры &quot;игрок&quot; и
&quot;противник&quot;, тогда мы будем иметь следующие
два вида позиций: позиция с ходом игрока
(&quot;позиция игрока&quot;) и позиция с ходом
противника (&quot;позиция противника&quot;). Допустим
также, что начальная позиция&nbsp; <em>Р</em>&nbsp; - &nbsp;
это позиция игрока. Каждый вариант хода игрока в
этой позиции приводит к одной из позиций
противника&nbsp; <em>Q<sub>1</sub></em>,&nbsp; <em>Q<sub>2</sub></em>,&nbsp; <em>Q<sub>3</sub></em>,
&nbsp; ...&nbsp; (см. рис. 13.7). Далее каждый вариант хода
противника в позиции&nbsp; <em>Q<sub>1</sub></em>&nbsp; приводит
к одной из позиций игрока&nbsp; <em>R<sub>11</sub></em>,&nbsp; <em>R<sub>12</sub></em>,
&nbsp; ... .&nbsp; В&nbsp; И / ИЛИ-дереве, показанном на рис.
13.7, вершины соответствуют позициям, а дуги -
возможным ходам. Уровни позиций игрока
чередуются в дереве с уровнями позиций
противника. Для того, чтобы выиграть в позиции
&nbsp; <em>Р</em>,&nbsp; нужно найти ход, переводящий&nbsp; <em>Р</em>
&nbsp; в выигранную позицию&nbsp; <em>Q<sub>i</sub></em>.&nbsp; (при
некотором&nbsp; <em>i</em>).&nbsp; Таким образом, игрок
выигрывает в позиции&nbsp; <em>Р</em>,&nbsp; если он
выигрывает в&nbsp; <em>Q<sub>1</sub></em>,&nbsp; <em>или&nbsp; Q<sub>2</sub></em>,
&nbsp; <em>или&nbsp; Q<sub>3</sub></em>,&nbsp; <em>или</em> ... .
Следовательно,&nbsp; <em>Р</em>&nbsp; - это ИЛИ-вершина. Для
любого&nbsp; <em>i</em>&nbsp; позиция&nbsp; <em>Q<sub>i</sub></em>&nbsp; -
&nbsp; это позиция противника, поэтому если в этой
позиции выигрывает игрок, то он выигрывает и
после каждого вариан-</p>

<p align="center"><img src="pic/fig13_7.gif" width="452" height="216"
alt="fig13_7.gif (2554 bytes)"></p>

<p align="center"><small><strong>Рис. 13. 7.</strong>&nbsp; Формулировка
игровой задачи для игры двух лиц в<br>
форме И / ИЛИ-дерева; участники игры: &quot;игрок&quot;
и &quot;противник&quot;.</small></p>

<p>та хода противника. Другими словами, игрок
выигрывает в&nbsp; <em>Q<sub>i</sub></em>,&nbsp; если он
выигрывает во всех позициях&nbsp; <em>R<sub>i1</sub>&nbsp; и
&nbsp; R<sub>i2</sub>&nbsp; и</em>&nbsp; ... .&nbsp; Таким образом, все
позиции противника - это И-вершины. Целевые
вершины - это позиции, выигранные согласно
правилам игры, например позиции, в которых король
противника получает мат. Позициям проигранным
соответствуют задачи, не имеющие решения. Для
того, чтобы решить игровую задачу, мы должны
построить решающее дерево, гарантирующее победу
игрока независимо от ответов противника. Такое
дерево задает полную стратегию достижения
выигрыша: для каждого возможного продолжения,
выбранного противником, в дереве стратегии есть
ответный ход, приводящий к победе.</p>

<hr>

<p align="center"><a href="ch13_1.htm">Назад</a> | <a href="index.htm">Содержание</a>
| <a href="ch13_3.htm">Вперёд</a></p>
</body>
<script language="JavaScript">

hl();

</script>

</html>
