<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>

<head>
<title>Глава 1. Пункт 1</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<script src="script.js" type="text/javascript"></script>
</head>

<body bgColor="#fff5ee">

<p align="center"><a href="preface_author.htm">Назад</a> | <a href="index.htm">Содержание</a>
| <a href="ch1_2.htm">Вперёд</a></p>

<hr>

<p align="left">&nbsp;</p>
<script language="JavaScript">double_rectangle();</script>


<p align="left">&nbsp;</p>

<h3 align="center">Часть 1</h3>

<h3 align="center">ЯЗЫК ПРОЛОГ</h3>

<p align="center">&nbsp;</p>

<p align="center">&nbsp;</p>

<p align="center">&nbsp;</p>

<p align="center">&nbsp;</p>

<p align="center">&nbsp;</p>

<p align="center">&nbsp;</p>

<p align="center"><img src="pic/fig1_0.gif" width="268" height="190"
alt="fig1_0.gif (1304 bytes)"></p>

<p align="left">&nbsp;</p>

<p align="left">&nbsp;</p>

<p align="left">&nbsp;</p>

<p align="left">&nbsp;</p>

<p align="left">&nbsp;</p>

<hr>

<h3 align="center">Глава 1</h3>

<h3 align="center">ОБЩИЙ ОБЗОР ЯЗЫКА ПРОЛОГ</h3>

<p>В этой главе на примере конкретной программы
рассматриваются основные механизмы Пролога.
Несмотря на то, что материал излагается в
основном неформально, здесь вводятся многие
важные понятия.</p>
<a name="p1_1"><script language="JavaScript">double_line();</script>


<h4>1. 1.&nbsp;&nbsp;&nbsp; Пример программы: родственные
отношения</h4>

<p>Пролог - это язык программирования,
предназначенный для обработки символьной
нечисловой информации. Особенно хорошо он
приспособлен для решения задач, в которых
фигурируют объекты и отношения между ними. На
рис. 1.1 представлен пример - родственные
отношения. Тот факт, что Том является родителем
Боба, можно записать на Прологе так:</p>

<p><strong>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; родитель( том, боб).</strong></p>

<p>Здесь мы выбрали <strong>родитель</strong> в качестве
имени отношения, <strong>том</strong> и <strong>боб</strong> - в
качестве аргументов этого отношения. По
причинам, которые станут понятны позднее, мы
записываем такие имена, как <strong>том</strong>, начиная
со строчной буквы. Все дерево родственных
отношений рис. 1.1 описывается следующей
пролог-программой:</p>

<p><strong>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; родитель( пам, боб).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; родитель( том, боб).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; родитель( том, лиз).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; родитель( боб, энн).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; родитель( боб, пат).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; родитель( пам, джим).</strong> </p>

<p>&nbsp;</p>

<p align="center"><img src="pic/fig1_1.gif" width="274" height="324"
alt="fig1_1.gif (1716 bytes)"></p>

<p align="center"><small><strong>Рис. 1. 1.</strong>&nbsp; Дерево
родственных </a><a name="tn230">отношений.</small></p>

<p>Эта программа содержит шесть <em><span id="t230">предложений</span></em>.
Каждое предложение объявляет об одном факте
наличия отношения <strong>родитель</strong>.</p>

<p>После ввода такой программы в пролог-систему
последней можно будет задавать вопросы,
касающиеся отношения <strong>родитель</strong>.
Например, является ли Боб родителем Пат? Этот
вопрос можно передать пролог-системе, набрав на
клавиатуре терминала:</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>?-&nbsp; родитель( боб,
пат).</strong></p>

<p>Найдя этот факт в программе, система ответит</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>yes&nbsp;&nbsp;&nbsp; </strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
(да)</p>

<p>Другим вопросом мог бы быть такой:</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>?-&nbsp; родитель( лиз,
пат).</strong></p>

<p>Система ответит</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>no</strong>&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (нет),</p>

<p>поскольку в программе ничего не говорится о
том, является ли Лиз родителем Пат. Программа
ответит &quot;нет&quot; и на вопрос</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>?-&nbsp; родитель( том,
бен).</strong></p>

<p>потому, что имя Бен в программе даже не
упоминается.</p>

<p>Можно задавать и более интересные вопросы.
Например:&quot;Кто является родителем Лиз?&quot;</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>?-&nbsp; родитель( X, лиз).</strong></p>

<p>На этот раз система ответит не просто &quot;да&quot;
или &quot;нет&quot;. Она скажет нам, каким должно быть
значение <strong>X</strong> (ранее неизвестное), чтобы
вышеприведенное утверждение было истинным.
Поэтому мы получим ответ:</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>X&nbsp; =&nbsp; том</strong></p>

<p>Вопрос &quot;Кто дети Боба?&quot; можно передать
пролог-системе в такой форме:</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>?-&nbsp; родитель( боб, X).</strong></p>

<p>В этом случае возможно несколько ответов.
Сначала система сообщит первое решение:</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>X&nbsp; =&nbsp; энн</strong></p>

<p>Возможно, мы захотим увидеть и другие решения. О
нашем желании мы можем сообщить системе (во
многих реализациях для этого надо набрать точку
с запятой), и она найдет другой ответ:</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>X&nbsp; =&nbsp; пат</strong></p>

<p>Если мы потребуем дальнейших решений, система
ответит &quot;нет&quot;, поскольку все решения
исчерпаны.</p>

<p>Нашей программе можно задавать и более общие
вопросы: &quot;Кто чей родитель?&quot; Приведем другую
формулировку этого вопроса:</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Найти X и Y такие, что X -
родитель Y.</p>

<p>На Прологе это записывается так:</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>?-&nbsp; родитель( X, Y).</strong></p>

<p>Система будет по очереди находить все пары вида
&quot;родитель-ребенок&quot;. По мере того, как мы
будем требовать от системы новых решений, они
будут выводиться на экран одно за другим до тех
пор, пока все они не будут найдены. Ответы
выводятся следующим образом:</p>

<p><strong>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; X&nbsp; =&nbsp; пам<br>
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Y&nbsp; =&nbsp; боб;</strong></p>

<p><strong>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; X&nbsp; =&nbsp; том<br>
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Y&nbsp; =&nbsp; боб;</strong></p>

<p><strong>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; X&nbsp; =&nbsp; том<br>
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Y&nbsp; =&nbsp; лиз;</strong></p>

<p><strong>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; .&nbsp; .&nbsp; .</strong></p>

<p>Мы можем остановить поток решений, набрав,
например, точку вместо точки с запятой (выбор
конкретного символа зависит от реализации).</p>

<p>Нашей программе можно задавать и еще более
сложные вопросы, скажем, кто является родителем
родителя Джима? Поскольку в нашей программе
прямо не сказано, что представляет собой
отношение <strong>родительродителя</strong>, такой
вопрос следует задавать в два этапа, как это
показано на рис. 1.2.</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; (1)&nbsp;&nbsp;&nbsp; Кто родитель
Джима? &nbsp; Предположим, что это некоторый Y.</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; (2)&nbsp;&nbsp;&nbsp; Кто родитель Y?
&nbsp; Предположим, что это некоторый X.</p>

<p>Такой составной вопрос на Прологе записывается
в виде последовательности двух простых вопросов:</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>?-&nbsp; родитель( Y, джим),
родитель( X, Y).</strong></p>

<p>Ответ будет:</p>

<p><strong>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; X&nbsp; =&nbsp; боб<br>
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Y&nbsp; =&nbsp; пат</strong> </p>

<p align="center"><img src="pic/fig1_2.gif" width="251" height="212"
alt="fig1_2.gif (1154 bytes)"></p>

<blockquote>
  <blockquote>
    <blockquote>
      <p align="left"><small><strong>Рис. 1. 2.</strong>&nbsp;&nbsp; Отношение <strong>родительродителя</strong>,
      выраженное через композицию двух отношений <strong>родитель</strong>.</small></p>
    </blockquote>
  </blockquote>
</blockquote>

<p>Наш составной вопрос можно интерпретировать и
так: &quot;Найти X и Y, удовлетворяющие следующим
двум требованиям&quot;:</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>родитель ( Y, джим)&nbsp; </strong>и<strong>
&nbsp; родитель( X, У)</strong></p>

<p>Если мы поменяем порядок этих двух требований,
то логический смысл останется прежним:</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>родитель ( X, Y)&nbsp;&nbsp; </strong>и<strong>
&nbsp; родитель ( Y, джим)</strong></p>

<p>Этот вопрос можно задать нашей пролог-системе и
в такой форме:</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>?-&nbsp; родитель( X, Y),
родитель( Y, джим).</strong></p>

<p>При этом результат будет тем же. Таким же
образом можно спросить: &quot;Кто внуки Тома?&quot;</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>?-&nbsp; родитель( том, X),
родитель( X, Y).</strong></p>

<p>Система ответит так:</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>X&nbsp; =&nbsp; боб<br>
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Y&nbsp; =&nbsp; энн;</strong></p>

<p><strong>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; X&nbsp; =&nbsp; боб<br>
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Y&nbsp; =&nbsp; пат</strong></p>

<p>Следующим вопросом мог бы быть такой: &quot;Есть
ли у Энн и Пат общий родитель?&quot; Его тоже можно
выразить в два этапа:</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; (1)&nbsp;&nbsp;&nbsp; Какой X
является родителем Энн?<br>
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; (2)&nbsp;&nbsp;&nbsp; Является ли (тот
же) X родителем Пат?</p>

<p>Соответствующий запрос к пролог-системе будет
тогда выглядеть так:</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>?-&nbsp; родитель( X, энн),
родитель( X, пат).</strong></p>

<p>Ответ:</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>X&nbsp; =&nbsp; боб</strong></p>

<p>Наша программа-пример помогла
проиллюстрировать некоторые важные моменты: 

<ul>
  <li>На Прологе легко определить отношение, подобное
    отношению <strong>родитель</strong>, указав <em>n</em>-ку
    объектов, для которых это отношение выполняется.</li>
  <li>Пользователь может легко задавать
    пролог-системе вопросы, касающиеся отношений,
    определенных в программе.</li>
  <li>Пролог-программа состоит из предложений. Каждое
    предложение заканчивается точкой.</li>
  <li>Аргументы отношения могут быть (среди прочего):
    конкретными объектами, или константами (такими,
    как <strong>том</strong> и <strong>энн</strong>), или</a><a name="tn13">
    абстрактными объектами, такими, как <strong>X</strong> и <strong>Y</strong></a><a
    name="tn205">. Объекты первого типа называются <em><span
    id="t13">атомами</span></em>. Объекты второго типа - <em><span
    id="t205">переменными</span></em></a>.</li>
  <li>Вопросы к системе<a name="tn328"> состоят из одного или
    более целевых утверждений (или кратко <em><span id="t328">целей</span></em>).
    Последовательность целей, такая как<br>
    <br>
    <strong>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; родитель( X, энн),
    родитель( X, пат)</strong><br>
    <br>
    означает конъюнкцию этих целевых утверждений:<br>
    <br>
    &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; X&nbsp; -&nbsp; родитель Энн <em>&nbsp;
    и</em><br>
    &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; X&nbsp; -&nbsp; родитель Пат.<br>
    <br>
    Пролог-система рассматривает вопросы как цели, к
    достижению которых нужно стремиться.<br>
  </li>
  <li>Ответ на вопрос может оказаться или
    положительным или отрицательным в зависимости
    от того, может ли быть соответствующая</a> цель
    достигнута или нет. В случае положительного
    ответа мы<a name="tn329"> говорим</a><a name="tn334">, что
    соответствующая</a><a name="tn332"> цель</a><a name="tn330"> <em><span
    id="t329">достижима</span></em></a><a name="tn333"> и <em><span id="t334">успешна</span></em>.
    В противном случае цель <em><span id="t332">&nbsp;
    недостижима</span></em>, <em><span id="t330">&nbsp; имеет неуспех</span></em>&nbsp;&nbsp;
    или&nbsp;&nbsp; <em><span id="t333">терпит неудачу</span></em>.</li>
  <li>Если на вопрос существует несколько ответов,
    пролог-система найдет столько из них, сколько
    пожелает пользователь.</li>
</ul>

<h4>Упражнения</h4>

<p><strong>1. 1.</strong>&nbsp;&nbsp;&nbsp; Считая, что отношение <strong>родитель</strong>
определено так же, как и раньше в данном разделе
(см. рис. 1.1), найдите, какими будут ответы
пролог-системы на следующие вопросы:</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; (a)&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>?
&nbsp; -&nbsp; родитель ( джим, X).</strong></p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; (b)&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>?
&nbsp; -&nbsp; родитель( X, джим).</strong></p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; (c)&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>?
&nbsp; -&nbsp; родитель( пам,Х), родитель( Х, пат).</strong></p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; (d)&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>?
&nbsp; -&nbsp; родитель( пам, X), родитель( Х, Y),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
родитель( Y, джим).</strong></a></p>

<p><a href="javascript:fa('1_1')">Посмотреть ответ</a></p>
<a name="tn333">

<p><strong>1. 2.</strong>&nbsp;&nbsp;&nbsp; Сформулируйте на Прологе
следующие вопросы об отношении <strong>родитель</strong>:</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; (a)&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Кто
родитель Пат?</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; (b)&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Есть
ли у Лиз ребенок?</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; (c)&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Кто
является родителем родителя Пат?</p>
</a>

<p><a href="javascript:fa('1_2')">Посмотреть ответ</a></p>

<hr>

<p align="center"><a href="preface_author.htm">Назад</a> | <a href="index.htm">Содержание</a>
| <a href="ch1_2.htm">Вперёд</a></p>
</body>
<script language="JavaScript">

hl();

</script>

</html>
