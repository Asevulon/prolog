<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>

<head>
<title>Глава 7. Пункт 5</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<script src="script.js" type="text/javascript"></script>
</head>

<body bgColor="#fff5ee">

<p align="center"><a href="ch7_4.htm">Назад</a> | <a href="index.htm">Содержание</a>
| <a href="ch7_6.htm">Вперёд</a></p>
<script language="JavaScript">double_line();</script>


<h4>7. 5.&nbsp;&nbsp;&nbsp; Средства управления</h4>

<p>К настоящему моменту мы познакомились с
большинством дополнительных средств управления,
за исключением <strong>repeat</strong> (повторение). Здесь
мы для полноты приводим список всех таких
средств. 

<ul>
  <li><em>отсечение</em>, записывается как&nbsp; '!', &nbsp;
    предотвращает перебор, введено в гл. 5.</li>
  <li><strong>fail</strong> - цель, которая всегда терпит
    неудачу.</li>
  <li><strong>true</strong> - цель, которая всегда успешна.</li>
  <li><strong>not( P)</strong> - вид отрицания, который всегда
    ведет себя в точном соответствии со следующим
    определением:<br>
    <br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>not( P) :- P,&nbsp; !,&nbsp; fail;
    &nbsp; true.</strong><br>
    <br>
    Некоторые проблемы, связанные с отсечением и <strong>not</strong>
    детально обсуждались в гл. 5.</li>
  <li><strong>саll( P)</strong> активизирует цель <strong>Р</strong>.
    Обращение <a name="tn71">к <strong>саll</strong> имеет успех,
    если имеет успех Р.</li>
  <li><strong><span id="t71">repeat</span></strong> - цель, которая всегда
    успешна. Ее особое свойство состоит в том, что она
    недетерминирована, поэтому всякий раз, как до нее
    доходит перебор, она порождает новую ветвь
    вычислений. Цель <strong>repeat</strong> ведет себя так, как
    если бы она была определена следующим образом:<br>
    <br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>repeat.<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; repeat :- repeat.</strong><br>
    <br>
    Стандартный способ применения <strong>repeat</strong>
    показан в процедуре <strong>квадраты</strong>, которая
    читает последовательность чисел и выдает их
    квадраты. Последовательность чисел
    заканчивается атомом <strong>стоп</strong>, который
    служит для процедуры сигналом окончания работы.<br>
    <br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>квадраты :-<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    repeat,<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    read( X),<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    ( X = стоп,&nbsp; !;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    Y &nbsp; is&nbsp; X*X,&nbsp; write( Y),&nbsp; fail ).</strong><br>
  </li>
</ul>

<hr>
</a>

<p align="center"><a href="ch7_4.htm">Назад</a> | <a href="index.htm">Содержание</a>
| <a href="ch7_6.htm">Вперёд</a></p>
</body>
<script language="JavaScript">

hl();

</script>

</html>
