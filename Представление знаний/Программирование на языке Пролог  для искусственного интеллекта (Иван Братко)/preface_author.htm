<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>

<head>
<title>Предисловие автора</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
</head>

<body bgColor="#fff5ee">

<p align="center"><a href="preface.htm">Назад</a> | <a href="index.htm">Содержание</a>
| <a href="ch1_1.htm">Вперёд</a></p>

<hr>

<p align="right"><em>Посвящается Бранке, Андрею и Тадею</em> </p>

<h3>ПРЕДИСЛОВИЕ АВТОРА</h3>

<p>Язык программирования Пролог базируется на
ограниченном наборе механизмов, включающих в
себя сопоставление образцов, древовидное
представление структур данных и автоматический
возврат. Этот небольшой набор образует
удивительно мощный и гибкий программный аппарат.
Пролог особенно хорошо приспособлен для решения
задач, в которых фигурируют объекты (в частности,
структуры) и отношения между ними. Например, в
качестве легкого упражнения, можно попробовать
выразить на Прологе пространственные отношения
между объектами, изображенными на обложке этой
книги. Пример такого отношения: верхний шар
расположен дальше, чем левый шар. Нетрудно также
сформулировать и более общее положение в виде
следующего правила: если X ближе к наблюдателю,
чем Y, a Y - ближе, чем Z, то объект X находится ближе,
чем Z. Пользуясь правилами и фактами,
пролог-система может проводить рассуждения
относительно имеющихся пространственных
отношений и, в частности, проверить, насколько
они согласуются с вышеуказанным общим правилом.
Все эти возможности придают Прологу черты
мощного языка для решения задач искусственного
интеллекта, а также любых задач, требующих
нечислового программирования. </p>

<p>Само название <em>Пролог</em> есть сокращение,
означающее <em>программирование в терминах логики</em>.
Идея использовать логику в качестве языка
программирования возникла впервые в начале 70-х
годов. Первыми исследователями,
разрабатывавшими эту идею, были Роберт
Ковальский из Эдинбурга (теоретические аспекты),
Маартен ван Эмден из Эдинбурга
(экспериментальная демонстрационная система) и
Ален Колмероэ из Марселя (реализация).
Сегодняшней своей популярности Пролог во многом
обязан эффективной реализации этого языка,
полученной в Эдинбурге Дэвидом Уорреном в
середине 70-х годов. </p>

<p>Поскольку Пролог уходит своими корнями в
математическую логику, его преподавание часто
начинают с изложения логики. Однако такое
введение в Пролог, насыщенное математическими
понятиями, приносит мало пользы в том случае,
когда Пролог изучается в качестве практического
инструмента программирования. Поэтому в данной
книге мы не будем заниматься математическими
аспектами этого языка, вместо этого мы
сосредоточим свое внимание на навыках
использования базовых механизмов Пролога, для
решения целого ряда содержательных задач. В то
время, как традиционные языки программирования
являются процедурно-ориентированными, Пролог
основан на описательной или <em>декларативной</em>
точке зрения на программирование. Это свойство
Пролога коренным образом меняет программистское
мышление и делает обучение программированию на
Прологе увлекательным занятием, требующим
определенных интеллектуальных усилий. </p>

<p>В первой части книги содержится введение в
Пролог, в ней показано, как составлять программы
на Прологе. Во второй части демонстрируется, как
мощные средства языка применяются в некоторых
областях искусственного интеллекта, таких как,
например, решение задач, эвристический поиск,
экспертные системы, машинные игры и системы,
управляемые образцами. В этой части излагаются
фундаментальные методы в области искусственного
интеллекта. Далее они прорабатываются
достаточно глубоко для того, чтобы реализовать
их на Прологе и получить готовые программы. Эти
программы можно использовать в качестве
&quot;кирпичиков&quot; для построения сложных
прикладных систем. В книге рассматриваются также
вопросы обработки таких сложных структур данных,
как графы и деревья, хотя эти вопросы, строго
говоря, и не имеют прямого отношения к
искусственному интеллекту. В программах
искусственного интеллекта методы обработки
структур применяются довольно часто, и, реализуя
их, читатель приобретет самые общие навыки
программирования на Прологе. В книге особое
внимание уделяется простоте и ясности
составляемых программ. Повсеместно мы
стремились избегать программистских
&quot;хитростей&quot;, повышающих эффективность за
счет учета особенностей конкретной реализации
Пролога. </p>

<p>Эта книга предназначена для тех, кто изучает
Пролог и искусственный интеллект. Материал книги
можно использовать в курсе лекций по
искусственному интеллекту, ориентированном на
прологовскую реализацию. Предполагается, что
читатель имеет общее представление о
вычислительных машинах, но предварительные
знания в области искусственного интеллекта
необязательны. От читателя не требуется также
какого-либо программистского опыта. Дело в том,
что богатый программистский опыт вместе с
приверженностью к традиционному процедурному
программированию (например, на Паскале) может
стать помехой при изучении Пролога, требующего
свежего программистского мышления. </p>

<p>Среди различных диалектов Пролога наиболее
широко распространен так называемый
эдинбургский синтаксис (или синтаксис DEC-10),
который мы я принимаем в данной книге. Для того,
чтобы обеспечить совместимость с различными
реализациями Пролога, мы используем в книге
сравнительно небольшое подмножество встроенных
средств, имеющихся во многих вариантах Пролога. </p>

<p>Как читать эту книгу? В первой части порядок
чтения естественным образом совпадает с
порядком изложения, принятым в книге. Впрочем,
часть разд. 2.4, в которой дается более формальное
описание процедурной семантики Пролога, можно
опустить. В главе 4 приводятся примеры программ,
которые можно читать только выборочно. Вторая
часть книги допускает более гибкий порядок
чтения, поскольку различные главы этой части
предполагаются взаимно независимыми. Однако
некоторые из тем было бы естественным прочесть
раньше других - это относится к основным
понятиям, связанным со структурами данных (гл. 9),
и к базовым стратегиям поиска (гл. 11 и 13). В
приведенной ниже диаграмме показана наиболее
естественная последовательность чтения глав. </p>

<blockquote>
  <p><img src="pic/fig0_2.gif" width="427" height="172" alt="fig0_2.gif (1579 bytes)"></p>
</blockquote>

<p>Существует целый ряд исторически сложившихся и
противоречащих друг другу взглядов на Пролог.
Пролог быстро завоевал популярность в Европе как
практический инструмент программирования. В
Японии Пролог оказался в центре разработки
компьютеров пятого поколения. С другой стороны, в
связи с определенными историческими факторами, в
США Пролог получил признание несколько позднее.
Один из этих факторов был связан с
предварительным знакомством с Микропленнером,
языком, близким к логическому программированию,
но реализованным не эффективно. Этот
отрицательный опыт, относящийся к Микропленнеру,
был неоправданно распространен и на Пролог, но
позднее, после появления эффективной реализации,
предложенной Дэвидом Уорреном, это
предубеждение было убедительно снято.
Определенная сдержанность по отношению к
Прологу объяснялась также существованием
&quot;ортодоксальной школы&quot; логического
программирования, сторонники которой настаивали
на использовании чистой логики, не запятнанной
добавлением практически полезных внелогических
средств. Практикам в области применения Пролога
удалось изменить эту бескомпромиссную позицию и
принять более прагматический подход,
позволивший удачно сочетать декларативный
принцип с традиционным - процедурным. И наконец,
третьим фактором, приведшим к задержке признания
Пролога, явилось то обстоятельство, что в США в
течение долгого времени Лисп не имел серьезных
конкурентов среди языков искусственного
интеллекта. Понятно поэтому, что в
исследовательских центрах с сильными
лисповскими традициями возникало естественное
противодействие Прологу. Но со временем
соперничество между Прологом и Лиспом потеряло
свою остроту, и в настоящее время многие считают,
что оптимальный подход состоит в сочетании идей,
лежащих в основе этих двух языков.</p>

<h4><em>Благодарности</em> </h4>

<p>Интерес к Прологу впервые возник у меня под
влиянием Дональда Мики. Я благодарен также
Лоренсу Берду, Фернандо Перейра и Дэвиду Г.
Уоррену, входившим в свое время в эдинбургскую
группу разработчиков Пролога, за их советы по
составлению программ и многочисленные
дискуссии. Чрезвычайно полезными были замечания
и предложения, высказанные Эндрью Макгеттриком и
Патриком Уинстоном. Среди прочитавших рукопись
книги и сделавших ценные замечания были также
Игорь Кононенко, Таня Маярон, Игорь Мозетик,
Тимоти Ниблетт и Фрэнк Зердин. Мне бы хотелось
также поблагодарить Дебру Майсон-Этерингтон и
Саймона Пламтри из издательства Эддисон-Уэсли за
труд, вложенный в издание этой книги. И наконец,
эта книга не могла бы появиться на свет без
стимулирующего влияния творческой деятельности
всего международного сообщества специалистов по
логическому программированию. </p>

<p align="right">Иван Братко</p>

<p align="right">Институт Тьюринга, Глазго<br>
Январь 1986</p>

<hr>

<p align="center"><a href="preface.htm">Назад</a> | <a href="index.htm">Содержание</a>
| <a href="ch1_1.htm">Вперёд</a></p>
</body>
</html>
