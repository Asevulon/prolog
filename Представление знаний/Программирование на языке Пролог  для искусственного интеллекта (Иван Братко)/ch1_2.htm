<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>

<head>
<title>Глава 1. Пункт 2</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<script src="script.js" type="text/javascript"></script>
</head>

<body bgColor="#fff5ee">

<p align="center"><a href="ch1_1.htm">Назад</a> | <a href="index.htm">Содержание</a>
| <a href="ch1_3.htm">Вперёд</a></p>
<script language="JavaScript">double_line();</script>


<h4>1. 2.&nbsp;&nbsp;&nbsp; Расширение программы-примера с
помощью правил</h4>

<p>Нашу программу-пример можно легко расширить
многими интересными способами. Давайте сперва
добавим информацию о том, каков пол людей,
участвующих в отношении <strong>родитель</strong>. Это
можно сделать, просто добавив в нее следующие
факты:</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>женщина( пам).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; мужчина( том).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; мужчина( боб).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; женщина( лиз).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; женщина( пат).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; женщина( энн).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; мужчина( джим).</strong></p>

<p>Мы ввели здесь два новых отношения - <strong>мужчина</strong>
и <strong>женщина</strong>. Эти отношения - унарные (или
одноместные). Бинарное отношение, такое как <strong>родитель</strong>,
определяет отношение между <em>двумя</em> объектами;
унарные же можно использовать для объявления
наличия (отсутствия) простых свойств у объектов.
Первое из приведенных выше предложений читается
так: Пам - женщина. Можно было бы выразить
информацию, представляемую этими двумя унарными
отношениями (<strong>мужчина</strong> и <strong>женщина</strong>),
по-другому - с помощью одного бинарного отношения
<strong>пол</strong>. Тогда новый фрагмент нашей
программы выглядел бы так:</p>

<p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; пол( пам, женский).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; пол( том, мужской).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; пол( боб, мужской).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .&nbsp; .&nbsp; .</strong></p>

<p>В качестве дальнейшего расширения нашей
программы-примера давайте введем отношение <strong>отпрыск</strong>,
которое обратно отношению <strong>родитель</strong>.
Можно было бы определить <strong>отпрыск</strong> тем же
способом, что и <strong>родитель</strong>, т.е. представив
список простых фактов наличия этого отношения
для конкретных пар объектов, таких, что один
является отпрыском другого. Например:</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>отпрыск( лиз, том).</strong></p>

<p>Однако это отношение можно определить
значительно элегантнее, использовав тот факт,
что оно обратно отношению <strong>родитель</strong>,
которое уже определено. Такой альтернативный
способ основывается на следующем логическом
утверждении:</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Для всех X и Y<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Y
является отпрыском X, если<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; X
является родителем Y.</p>

<p>Эта формулировка уже близка к формализму,
принятому в Прологе. Вот соответствующее
прологовское предложение, имеющее тот же смысл:</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>отпрыск( Y, X) :- родитель(
X, Y).</strong></p>

<p>Это предложение можно прочитать еще и так:</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Для всех X и Y,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
если X - родитель Y, то<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Y -
отпрыск X.</p>

<p>Такие предложения Пролога, как</p>
<a name="tn227">

<p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; отпрыск( Y, X) :-
родитель( X, Y).</strong></p>

<p><span id="t227">называются <em>правилами</em></span>. Есть
существенное различие между фактами и правилами.
Факт, подобный факту</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>родитель( том, лиз).</strong></p>

<p>это нечто такое, что всегда, безусловно истинно.
Напротив, правила описывают утверждения, которые
могут быть истинными, только если выполнено
некоторое условие. Поэтому можно сказать, что
правила имеют 

<ul>
  <li>условную часть (правая половина правила) и</li>
  </a>
  <li>часть<a name="tn87"> вывода</a><a name="tn235"> (левая половина
    правила).</li>
</ul>

<p>Вывод называют также <span id="t87"><em>головой</em>
предложения</span>, а условную часть - его <em><span id="t235">телом</span></em>.
Например:</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>отпрыск( Y, X) :-
родитель( X, Y).</strong><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
голова
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
тело</p>

<p>Если условие <strong>родитель( X, Y)</strong> выполняется
(оно истинно), то логическим следствием из него
является утверждение <strong>отпрыск( Y, X)</strong>.</p>

<p>На приведенном ниже примере проследим, как в
действительности правила используются Прологом.
Спросим нашу программу, является ли Лиз
отпрыском Тома:</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>?&nbsp; -&nbsp; отпрыск( лиз,
том).</strong></p>

<p>В программе нет фактов об отпрысках, поэтому
единственный способ ответить на такой вопрос -
это применить правило о них. Правило
универсально в том смысле, что оно применимо к
любым объектам X и Y, следовательно, его можно
применить и к таким конкретным объектам, как <strong>лиз</strong>
и <strong>том</strong>. </a><a name="tn150">Чтобы это сделать,
нужно вместо <strong>Y</strong> подставить в него <strong>лиз</strong>,
а вместо <strong>X</strong> - <strong>том</strong>. <span id="t150">В этом
случае мы будем говорить, что переменные X и Y
конкретизируются:</span></p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>X&nbsp; =&nbsp; том</strong>
&nbsp;&nbsp; и&nbsp;&nbsp; <strong>Y&nbsp; =&nbsp; лиз</strong></p>

<p>После конкретизации мы получаем частный случай
нашего общего правила. Вот он:</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>отпрыск( лиз, том) :-
родитель( том, лиз).</strong></p>

<p>Условная часть приняла вид:</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>родитель( том, лиз)</strong></p>

<p>Теперь пролог-система попытается выяснить,
выполняется ли это условие (является ли оно
истинным). Для этого исходная цель</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>отпрыск( лиз, том)</strong></p>

<p>заменяется подцелью</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>родитель( том, лиз)</strong></p>

<p>Эта (новая) цель достигается тривиально,
поскольку такой факт можно найти в нашей
программе. Это означает, что утверждение,
содержащееся в выводе правила, также истинно, и
система ответит на вопрос <strong>yes</strong> (да).</p>

<p>Добавим теперь в нашу программу-пример еще
несколько родственных отношений. Определение
отношения <strong>мать</strong> может быть основано на
следующем логическом утверждении:</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Для всех X и Y<br>
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; X
является матерью Y, если<br>
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; X
является родителем Y и<br>
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Х -
женщина.</p>

<p>На Пролог это переводится в виде такого
правила:</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>мать( X, Y) :- родитель( X,
Y), женщина( X).</strong></p>

<p>Запятая между двумя условиями указывает ка
конъюнкцию условий. Это означает, что они должны
быть выполнены оба одновременно.</p>

<p align="center"><img src="pic/fig1_3.gif" width="542" height="216"
alt="fig1_3.gif (2270 bytes)"></p>

<p align="center"><small><strong>Рис. 1. 3.</strong>&nbsp; Графы
отношений <strong>родительродителя</strong>, <strong>мать</strong>
и <strong>отпрыск</strong>,</small><br>
<small>определенных через другие отношения.</small></a></p>
<a name="tn150">

<p>Такие отношения как <strong>родитель</strong>, <strong>отпрыск</strong>
и <strong>мать</strong> можно изобразить в виде диаграмм,
приведенных на рис. 1.3. Они нарисованы с учетом
следующих соглашений. Вершины графа
соответствуют объектам, т.е. аргументам
отношений. Дуги между вершинами соответствуют
бинарным (двуместным) отношениям. Дуги
направлены от первого аргумента к второму.
Унарные отношения на диаграмме изображаются
просто пометкой соответствующих объектов именем
отношения. Отношения, определяемые через другие
отношения, представлены штриховыми дугами. Таким
образом, любую диаграмму следует понимать так:
если выполнены отношения, изображенные
сплошными дугами, тогда и отношение,
изображенное штриховой дугой, тоже выполнено. В
соответствии с рис. 1.3, отношение <strong>родительродителя</strong>
можно сразу записать на Прологе:</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>родительродителя( X, Z)
:- родитель( X, Y),<br>
&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
родитель( Y, Z).</strong></p>

<p>Здесь уместно сделать несколько замечаний о
внешнем виде нашей программы. Пролог дает почти
полную свободу расположения текста на листе. Так
что можно вставлять пробелы и переходить к новой
строке в любом месте текста по вкусу. Вообще мы
хотим сделать так, чтобы наша программа имела
красивый и аккуратный вид, а самое главное, легко
читалась. Для этого мы часто будем помещать
голову предложения и каждую цель на отдельной
строке. При этом цели мы будем писать с отступом,
чтобы сделать разницу между головой и целями
более заметной. Например, правило <strong>родительродителя</strong>
в соответствии с этими соглашениями запишется
так:</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>родительродителя( X, Z)
:-<br>
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
родитель( X, Y),<br>
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
родитель( Y, Z).</strong></p>

<p>На рис. 1.4 показано отношение <strong>сестра</strong>:</p>

<p>&nbsp;&nbsp;&nbsp; Для любых X и Y<br>
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; X является сестрой Y, если<br>
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; (1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
у X и Y есть общий родитель, и<br>
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; (2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
X - женщина.</a></p>
<a name="tn150">

<p align="center"><img src="pic/fig1_4.gif" width="286" height="170"
alt="fig1_4.gif (1120 bytes)"></p>

<p align="center"><small><strong>Рис. 1. 4.</strong>&nbsp; Определение
отношения <strong>сестра</strong>.</small></p>

<p>Граф на рис. 1.4 можно перевести на Пролог так:</p>

<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>сестра( X, Y) :-<br>
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; родитель( Z, X),<br>
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; родитель( Z, Y),<br>
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; женщина( X).</strong></p>

<p>Обратите внимание на способ, с помощью которого
выражается требование &quot;у X и Y есть общий
родитель&quot;. Была использована следующая
логическая формулировка: &quot;некоторый Z должен
быть родителем X и <em>этот же самый</em> Z должен быть
родителем Y&quot;. По-другому, менее красиво, можно
было бы сказать так: &quot;Z1 - родитель X, Z2 - родитель
Y и Z1 равен Z2&quot;.</p>

<p>Теперь можно спросить:</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>?-&nbsp; сестра( энн, пат).</strong></p>

<p>Как и ожидается, ответ будет &quot;yes&quot; (да) (см.
рис. 1.1). Мы могли бы заключить отсюда, что
определенное нами отношение <strong>сестра</strong>
работает правильно. Тем не менее в нашей
программе есть маленькое упущение, которое
обнаружится, если задать вопрос: &quot;Кто является
сестрой Пат?&quot;</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>?-&nbsp; сестра( X, пат).</strong></p>

<p>Система найдет два ответа, один из которых
может показаться неожиданным:</p>

<p><strong>&nbsp;&nbsp; </strong>&nbsp;&nbsp;&nbsp;&nbsp; <strong>X&nbsp; =&nbsp; энн;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; X&nbsp; =&nbsp; пат</strong></p>

<p>Получается, что Пат - сестра себе самой?!
Наверное, когда мы определяли отношение <strong>сестра</strong>,
мы не имели этого ввиду. Однако ответ Пролога
совершенно логичен, поскольку он
руководствовался нашим правилом, а это правило
ничего не говорит о том, что, если X - сестра Y, то X и
Y не должны совпадать. Пролог (с полным правом)
считает, что X и Y могут быть одним и тем же
объектом и в качестве следствия из этого делает
вывод, что любая женщина, имеющая родителя,
является сестрой самой себе. </p>

<p>Чтобы исправить наше правило о сестрах, его
нужно дополнить утверждением, что X и Y должны
различаться. В следующих главах мы увидим, как
это можно сделать, в данный же момент мы
предположим, что отношение <strong>различны</strong> уже
известно пролог-системе и что цель</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>различны( X, Y)</strong></p>

<p>достигается тогда и только тогда, когда X и Y не
равны. Усовершенствованное правило для
отношения <strong>сестра</strong> примет тогда
следующий вид:</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>сестра( X, Y) :-<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; родитель( Z, X),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; родители( Z, Y),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; женщина( X),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; различны( X, Y).</strong></p>

<p>Некоторые важные моменты этого раздела: 

<ul>
  <li>Пролог-программы можно расширять, добавляя в
    них новые предложения.</li>
  <li>Прологовские предложения бывают трех типов: </a><a
    name="tn321"><em>факты</em>, <em>правила</em> и <em>вопросы</em>.</li>
  <li><em><span id="t321">Факты</span></em> содержат утверждения,
    которые</a><a name="tn228"> являются всегда, безусловно
    верными.</li>
  <li><em><span id="t228">Правила</span></em> содержат утверждения,
    истинность которых зависит от некоторых условий.</li>
  <li>С помощью <em>вопросов</em> пользователь может
    спрашивать систему о том, какие утверждения
    являются </a><a name="tn233">истинными</a><a name="tn236">.</li>
  <li>Предложения Пролога состоят из </a><em><span id="t233">головы</span></em>
    и <em>тела</em>. <span id="t236">Тело</span> - это список <em>целей</em>,
    разделенных запятыми. Запятая понимается как
    конъюнкция.</li>
  <li>Факты - это предложения, имеющие пустое тело.
    Вопросы имеют только тело. Правила имеют голову и
    (непустое) тело.</li>
  <li>По ходу вычислений вместо переменной может быть
    подставлен другой объект. Мы говорим в этом
    случае, что переменная <em>конкретизирована</em>.</li>
  <li>Предполагается, что на переменные действует
    квантор всеобщности, читаемый как &quot;для
    всех...&quot;. Однако для переменных, появляющихся
    только в теле, возможны и другие формулировки.
    Например,<br>
    <br>
    &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <strong>имеетребенка( X) :-
    родитель( X, Y).</strong><br>
    <br>
    можно прочитать двумя способами:<br>
    <br>
    (а)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <em>Для всех</em> X и Y,<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; если X - отец
    Y, то<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; X имеет
    ребенка.<br>
    <br>
    (б)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <em>Для всех</em> X,<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; X имеет
    ребенка, если<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; существует <em>некоторый</em>
    Y, такой, что<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; X - родитель Y.</li>
</ul>

<h4>Упражнения</h4>

<p><strong>1. 3.</strong>&nbsp;&nbsp;&nbsp; Оттранслируйте
следующие утверждения в правила на Прологе:</p>

<p>(a)&nbsp;&nbsp;&nbsp; Всякий, кто имеет ребенка, -
счастлив (введите одноаргументное отношение <strong>счастлив</strong>).
</p>

<p>(b)&nbsp;&nbsp;&nbsp; Всякий X, имеющий ребенка, у
которого есть сестра, имеет двух детей (введите
новое отношение <strong>иметьдвухдетей</strong>).</p>

<p><a href="javascript:fa('1_3')">Посмотреть ответ</a></p>

<p><strong>1. 4.</strong>&nbsp;&nbsp;&nbsp; Определите отношение <strong>внук</strong>,
используя отношение <strong>родитель</strong>. Указание:
оно будет похоже на отношение <strong>родительродителя</strong>
(см. рис. 1.3).</p>

<p><a href="javascript:fa('1_4')">Посмотреть ответ</a></p>

<p><strong>1. 5.</strong>&nbsp;&nbsp;&nbsp; Определите отношение <strong>тетя(
X, Y)</strong> через отношение <strong>родитель</strong> и <strong>сестра</strong>.
Для облегчения работы можно сначала изобразить
отношение <strong>тетя</strong> в виде диаграммы по типу
тех, что изображены на рис. 1.3.</p>

<p><a href="javascript:fa('1_5')">Посмотреть ответ</a></p>

<hr>

<p align="center"><a href="ch1_1.htm">Назад</a> | <a href="index.htm">Содержание</a>
| <a href="ch1_3.htm">Вперёд</a></p>
</body>
<script language="JavaScript">

hl();

</script>

</html>
